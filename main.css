:root {
    background: #080014;
    color: #3d4e9c;
    width: 100%;
    height: 100%;
    contain: strict;
}

input {
    background: #080014;
    color: #7686ce;
}
body {
    margin: 0;
    padding: 0;
    isolation: isolate;
    width: 100dvw;
    height: 100dvh;
    display: grid;
    grid:
        "viewport console" 100dvh
        / minmax(min-content, 100dvh) minmax(min-content, 1fr);
}

#viewportRegion {
    grid-area: viewport;
    display: grid;
    margin: 1em;
    align-items: center;
    justify-items: center;
    contain: size;
}

#sideConsole {
    grid-area: console;
    margin: 1em;
    margin-left: 0;
    display: flex;
    flex-direction: column;
    
    gap: 1em;
    grid:
        "stats" max-content;
        "messages" minmax(min-content, max-content);
}

@media (orientation: portrait) {
    body {
        grid:
            "viewport" minmax(min-content, 100dvw)
            "console" minmax(min-content, 1fr)
            / 100dvw;
    }
    #sideConsole {
        margin-left: 1em;
        margin-top: 0;
        flex-direction: row;
        flex-wrap: wrap;
        grid:
            "stats messages"
            "debug debug"
            / max-content max-content
        
    }
}

#gameDisplay {
    border: 1px solid currentColor;
    display: grid;
    grid: "display" calc(16px * var(--focus-rows)) / calc(16px * var(--focus-cols));
    overflow: clip;
    align-items: center;
    justify-items: center;
    scale: calc(min((var(--container-px-height)) / var(--viewport-px-height),
                    (var(--container-px-width)) / var(--viewport-px-width)));
}
#gameDisplay > * {
    grid-area: display;
}

canvas {
    background: #08001480;
    filter: blur(0);
/*     mix-blend-mode: lighten; */
}

canvas.layer-above {
    filter: blur(0.75px) brightness(calc(1 + 0.1 * var(--layer-offset)));
    opacity: calc(1.1 - 0.2 * var(--layer-offset));
    scale: calc(1 + var(--layer-offset) * .1);
    background: none;
}

canvas.layer-below {
    filter: blur(0.5px);
    scale: calc(1 + var(--layer-offset) * .1);
}

canvas.layer-focus {
    border-color: currentColor;
}

#statsPanel {
    background: #141335;
    padding: 1em;
    font-size: 1.5rem;
    white-space: nowrap;
}

#statsPanel dl {
    margin: 0;
}

#statsPanel output.curhp::after {
    content: " /";
}

#messagesPanel {
    background: #141335;
    padding: 1em;
    flex-grow: 1;
}

.hidden {
    display: none !important;
}

dl.debugInfo {
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    gap: 1em;
}

dl.debugInfo dt::after {
    content: ":"
}

dl.debugInfo > div:has(+div) > dd::after {
    content: ","
}

.debugInfo :is(dt, dd) {
    display: inline;
    margin: 0;
}
